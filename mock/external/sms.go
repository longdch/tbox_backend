// Code generated by MockGen. DO NOT EDIT.
// Source: external/sms.go

// Package mock_external is a generated GoMock package.
package mock_external

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockISmsService is a mock of ISmsService interface
type MockISmsService struct {
	ctrl     *gomock.Controller
	recorder *MockISmsServiceMockRecorder
}

// MockISmsServiceMockRecorder is the mock recorder for MockISmsService
type MockISmsServiceMockRecorder struct {
	mock *MockISmsService
}

// NewMockISmsService creates a new mock instance
func NewMockISmsService(ctrl *gomock.Controller) *MockISmsService {
	mock := &MockISmsService{ctrl: ctrl}
	mock.recorder = &MockISmsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockISmsService) EXPECT() *MockISmsServiceMockRecorder {
	return m.recorder
}

// SendOtp mocks base method
func (m *MockISmsService) SendOtp(phoneNumber, otp string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendOtp", phoneNumber, otp)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendOtp indicates an expected call of SendOtp
func (mr *MockISmsServiceMockRecorder) SendOtp(phoneNumber, otp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendOtp", reflect.TypeOf((*MockISmsService)(nil).SendOtp), phoneNumber, otp)
}
